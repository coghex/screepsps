// Generated by purs bundle 0.14.5
var PS = {};
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var apply = function (dict) {
      return dict.apply;
  };
  exports["apply"] = apply;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];          
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  exports["bind"] = bind;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["ap"] = ap;
})(PS);
(function(exports) {
  /* eslint-disable no-eq-null, eqeqeq */
  "use strict";

  function id(x) {
    return x;
  }                        
  exports.fromNumber = id;

  exports.stringify = function (j) {
    return JSON.stringify(j);
  };

  exports._caseJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null) return isNull();
    else if (typeof j === "boolean") return isBool(j);
    else if (typeof j === "number") return isNum(j);
    else if (typeof j === "string") return isStr(j);
    else if (Object.prototype.toString.call(j) === "[object Array]")
      return isArr(j);
    else return isObj(j);
  };
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Argonaut.Core"] = $PS["Data.Argonaut.Core"] || {};
  var exports = $PS["Data.Argonaut.Core"];
  var $foreign = $PS["Data.Argonaut.Core"];
  var Data_Function = $PS["Data.Function"];                  
  var verbJsonType = function (def) {
      return function (f) {
          return function (g) {
              return g(def)(f);
          };
      };
  };                                            
  var isJsonType = verbJsonType(false)(Data_Function["const"](true));
  var caseJsonNumber = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        
  var caseJsonNull = function (d) {
      return function (f) {
          return function (j) {
              return $foreign["_caseJson"](f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };
  var isNull = isJsonType(caseJsonNull);
  exports["caseJsonNumber"] = caseJsonNumber;
  exports["isNull"] = isNull;
  exports["fromNumber"] = $foreign.fromNumber;
  exports["stringify"] = $foreign.stringify;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var showInt = {
      show: $foreign.showIntImpl
  };
  var show = function (dict) {
      return dict.show;
  };
  exports["show"] = show;
  exports["showInt"] = showInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Argonaut.Decode.Error"] = $PS["Data.Argonaut.Decode.Error"] || {};
  var exports = $PS["Data.Argonaut.Decode.Error"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Show = $PS["Data.Show"];                
  var TypeMismatch = (function () {
      function TypeMismatch(value0) {
          this.value0 = value0;
      };
      TypeMismatch.create = function (value0) {
          return new TypeMismatch(value0);
      };
      return TypeMismatch;
  })();
  var UnexpectedValue = (function () {
      function UnexpectedValue(value0) {
          this.value0 = value0;
      };
      UnexpectedValue.create = function (value0) {
          return new UnexpectedValue(value0);
      };
      return UnexpectedValue;
  })();
  var AtIndex = (function () {
      function AtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AtIndex.create = function (value0) {
          return function (value1) {
              return new AtIndex(value0, value1);
          };
      };
      return AtIndex;
  })();
  var AtKey = (function () {
      function AtKey(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AtKey.create = function (value0) {
          return function (value1) {
              return new AtKey(value0, value1);
          };
      };
      return AtKey;
  })();
  var Named = (function () {
      function Named(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Named.create = function (value0) {
          return function (value1) {
              return new Named(value0, value1);
          };
      };
      return Named;
  })();
  var MissingValue = (function () {
      function MissingValue() {

      };
      MissingValue.value = new MissingValue();
      return MissingValue;
  })();
  var printJsonDecodeError = function (err) {
      var go = function (v) {
          if (v instanceof TypeMismatch) {
              return "  Expected value of type '" + (v.value0 + "'.");
          };
          if (v instanceof UnexpectedValue) {
              return "  Unexpected value " + (Data_Argonaut_Core.stringify(v.value0) + ".");
          };
          if (v instanceof AtIndex) {
              return "  At array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (":\x0a" + go(v.value1)));
          };
          if (v instanceof AtKey) {
              return "  At object key '" + (v.value0 + ("':\x0a" + go(v.value1)));
          };
          if (v instanceof Named) {
              return "  Under '" + (v.value0 + ("':\x0a" + go(v.value1)));
          };
          if (v instanceof MissingValue) {
              return "  No value was found.";
          };
          throw new Error("Failed pattern match at Data.Argonaut.Decode.Error (line 37, column 8 - line 43, column 44): " + [ v.constructor.name ]);
      };
      return "An error occurred while decoding a JSON value:\x0a" + go(err);
  };
  exports["TypeMismatch"] = TypeMismatch;
  exports["printJsonDecodeError"] = printJsonDecodeError;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];                 
  var map = function (dict) {
      return dict.map;
  };
  exports["map"] = map;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var note = function (a) {
      return Data_Maybe.maybe(new Left(a))(Right.create);
  };
  var functorEither = {
      map: function (f) {
          return function (m) {
              if (m instanceof Left) {
                  return new Left(m.value0);
              };
              if (m instanceof Right) {
                  return new Right(f(m.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 31, column 1 - line 31, column 52): " + [ m.constructor.name ]);
          };
      }
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var applyEither = {
      apply: function (v) {
          return function (v1) {
              if (v instanceof Left) {
                  return new Left(v.value0);
              };
              if (v instanceof Right) {
                  return Data_Functor.map(functorEither)(v.value0)(v1);
              };
              throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Functor0: function () {
          return functorEither;
      }
  };
  var bindEither = {
      bind: either(function (e) {
          return function (v) {
              return new Left(e);
          };
      })(function (a) {
          return function (f) {
              return f(a);
          };
      }),
      Apply0: function () {
          return applyEither;
      }
  };
  var applicativeEither = {
      pure: Right.create,
      Apply0: function () {
          return applyEither;
      }
  };
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["note"] = note;
  exports["functorEither"] = functorEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
})(PS);
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["fromNumber"] = fromNumber;
  exports["toNumber"] = $foreign.toNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Argonaut.Decode.Decoders"] = $PS["Data.Argonaut.Decode.Decoders"] || {};
  var exports = $PS["Data.Argonaut.Decode.Decoders"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];                                                                                                                            
  var decodeNumber = Data_Argonaut_Core.caseJsonNumber(Data_Either.Left.create(new Data_Argonaut_Decode_Error.TypeMismatch("Number")))(Data_Either.Right.create);
  var decodeMaybe = function (decoder) {
      return function (json) {
          if (Data_Argonaut_Core.isNull(json)) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          if (Data_Boolean.otherwise) {
              return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(decoder(json));
          };
          throw new Error("Failed pattern match at Data.Argonaut.Decode.Decoders (line 37, column 1 - line 41, column 38): " + [ decoder.constructor.name, json.constructor.name ]);
      };
  };
  var decodeInt = Control_Bind.composeKleisliFlipped(Data_Either.bindEither)((function () {
      var $54 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Integer"));
      return function ($55) {
          return $54(Data_Int.fromNumber($55));
      };
  })())(decodeNumber);
  exports["decodeMaybe"] = decodeMaybe;
  exports["decodeInt"] = decodeInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Argonaut.Decode.Class"] = $PS["Data.Argonaut.Decode.Class"] || {};
  var exports = $PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Decoders = $PS["Data.Argonaut.Decode.Decoders"];
  var decodeJsonInt = {
      decodeJson: Data_Argonaut_Decode_Decoders.decodeInt
  };
  var decodeJson = function (dict) {
      return dict.decodeJson;
  };
  var decodeJsonMaybe = function (dictDecodeJson) {
      return {
          decodeJson: Data_Argonaut_Decode_Decoders.decodeMaybe(decodeJson(dictDecodeJson))
      };
  };
  exports["decodeJson"] = decodeJson;
  exports["decodeJsonMaybe"] = decodeJsonMaybe;
  exports["decodeJsonInt"] = decodeJsonInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Argonaut.Encode.Encoders"] = $PS["Data.Argonaut.Encode.Encoders"] || {};
  var exports = $PS["Data.Argonaut.Encode.Encoders"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Int = $PS["Data.Int"];
  var encodeInt = function ($48) {
      return Data_Argonaut_Core.fromNumber(Data_Int.toNumber($48));
  };
  exports["encodeInt"] = encodeInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Argonaut.Encode.Class"] = $PS["Data.Argonaut.Encode.Class"] || {};
  var exports = $PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Encoders = $PS["Data.Argonaut.Encode.Encoders"];
  var encodeJsonInt = {
      encodeJson: Data_Argonaut_Encode_Encoders.encodeInt
  };
  var encodeJson = function (dict) {
      return dict.encodeJson;
  };
  exports["encodeJson"] = encodeJson;
  exports["encodeJsonInt"] = encodeJsonInt;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unconsImpl = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var uncons = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  exports["uncons"] = uncons;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad = $PS["Control.Monad"];                  
  var monadEffect = {
      Applicative0: function () {
          return applicativeEffect;
      },
      Bind1: function () {
          return bindEffect;
      }
  };
  var bindEffect = {
      bind: $foreign.bindE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var applyEffect = {
      apply: Control_Monad.ap(monadEffect),
      Functor0: function () {
          return functorEffect;
      }
  };
  var applicativeEffect = {
      pure: $foreign.pureE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var functorEffect = {
      map: Control_Applicative.liftA1(applicativeEffect)
  };
  exports["functorEffect"] = functorEffect;
  exports["applicativeEffect"] = applicativeEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
})(PS);
(function(exports) {
  "use strict";

  exports.all = function (f) {
    return function (m) {
      for (var k in m) {
        if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
      }
      return true;
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports.toArrayWithKey = toArrayWithKey;
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn4"] = $foreign.runFn4;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Maybe = $PS["Data.Maybe"];
  var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var isEmpty = $foreign.all(function (v) {
      return function (v1) {
          return false;
      };
  });
  exports["isEmpty"] = isEmpty;
  exports["lookup"] = lookup;
  exports["toArrayWithKey"] = $foreign.toArrayWithKey;
})(PS);
(function(exports) {
  "use_strict";   
  exports.pMove = MOVE;
  exports.pWork = WORK;
  exports.pCarry = CARRY;
})(PS["Screeps.Const"] = PS["Screeps.Const"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Screeps.Const"] = $PS["Screeps.Const"] || {};
  var exports = $PS["Screeps.Const"];
  var $foreign = $PS["Screeps.Const"];
  exports["pMove"] = $foreign.pMove;
  exports["pWork"] = $foreign.pWork;
  exports["pCarry"] = $foreign.pCarry;
})(PS);
(function(exports) {
  "use strict";

  exports.getGameGlobal = function(){ return Game; }
  exports.createCreepImpl = function(structure){
      return function(parts){
        return function(left){
          return function(right){
            return function(){
              var result = structure.createCreep(parts,{utility: 1});
              if (typeof result === "string"){
                  return right(result);
              } else {
                  return left(result);
              }
            }
          }
        }
      }
  }
})(PS["Screeps.Game"] = PS["Screeps.Game"] || {});
(function(exports) {
  "use strict";

  // module Screeps.FFI

  exports.unsafeField = function(key){
      return function(obj){
          return obj[key];
      }
  }
  exports.unsafeGetFieldEff = function(key){
      return function(obj){
          return function(){
              return obj[key];
          }
      }
  }
  exports.unsafeSetFieldEff = function(key){
      return function(obj){
          return function(val){
              return function(){
                  obj[key] = val;
              }
          }
      }
  }

  exports.runThisFn1 = function(key){
    return function(self){
      return function(a){
        return self[key](a);
      }
    }
  }
  exports.toMaybeImpl = function (val, nothing, just){
      if(val === null || val === undefined){
          return nothing;
      } else {
          return just(val);
      }
  }
})(PS["Screeps.FFI"] = PS["Screeps.FFI"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Screeps.FFI"] = $PS["Screeps.FFI"] || {};
  var exports = $PS["Screeps.FFI"];
  var $foreign = $PS["Screeps.FFI"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var toMaybe = function (n) {
      return $foreign.toMaybeImpl(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["unsafeField"] = $foreign.unsafeField;
  exports["unsafeGetFieldEff"] = $foreign.unsafeGetFieldEff;
  exports["unsafeSetFieldEff"] = $foreign.unsafeSetFieldEff;
  exports["runThisFn1"] = $foreign.runThisFn1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Screeps.Game"] = $PS["Screeps.Game"] || {};
  var exports = $PS["Screeps.Game"];
  var $foreign = $PS["Screeps.Game"];
  var Data_Either = $PS["Data.Either"];
  var Screeps_FFI = $PS["Screeps.FFI"];                
  var spawns = Screeps_FFI.unsafeField("spawns");
  var rawSpawnCreep = function (spawn) {
      return function (parts) {
          return function (name) {
              return function (role) {
                  return $foreign.createCreepImpl(spawn)(parts)(Data_Either.Left.create)(Data_Either.Right.create);
              };
          };
      };
  };
  var getObjectById = function (game) {
      return function (id) {
          return Screeps_FFI.toMaybe(Screeps_FFI.runThisFn1("getObjectById")(game)(id));
      };
  };
  var creeps = Screeps_FFI.unsafeField("creeps");
  exports["spawns"] = spawns;
  exports["creeps"] = creeps;
  exports["getObjectById"] = getObjectById;
  exports["rawSpawnCreep"] = rawSpawnCreep;
  exports["getGameGlobal"] = $foreign.getGameGlobal;
})(PS);
(function(exports) {
  "use strict";

  exports.getMemoryGlobal = function(){ return Memory; }      
  exports.getCreepsUtl = function(){
    var res = []
    for (var c in Memory.creeps) {
      res += Memory.creeps[c]["utility"]
    }
    return res
  }
})(PS["Screeps.Memory"] = PS["Screeps.Memory"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Screeps.Memory"] = $PS["Screeps.Memory"] || {};
  var exports = $PS["Screeps.Memory"];
  var $foreign = $PS["Screeps.Memory"];
  var Data_Argonaut_Decode_Class = $PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = $PS["Data.Argonaut.Encode.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Screeps_FFI = $PS["Screeps.FFI"];                
  var set = function (dictEncodeJson) {
      return function (memoryGlobal) {
          return function (key) {
              return function (val) {
                  return Screeps_FFI.unsafeSetFieldEff(key)(memoryGlobal)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)(val));
              };
          };
      };
  };
  var get = function (dictDecodeJson) {
      return function (memoryGlobal) {
          return function (key) {
              return Data_Functor.map(Effect.functorEffect)(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson))(Screeps_FFI.unsafeGetFieldEff(key)(memoryGlobal));
          };
      };
  };
  exports["set"] = set;
  exports["get"] = get;
  exports["getMemoryGlobal"] = $foreign.getMemoryGlobal;
  exports["getCreepsUtl"] = $foreign.getCreepsUtl;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Screeps.Types"] = $PS["Screeps.Types"] || {};
  var exports = $PS["Screeps.Types"];
  var Data_Show = $PS["Data.Show"];                                
  var RoleHarvester = (function () {
      function RoleHarvester() {

      };
      RoleHarvester.value = new RoleHarvester();
      return RoleHarvester;
  })();
  var RoleNULL = (function () {
      function RoleNULL() {

      };
      RoleNULL.value = new RoleNULL();
      return RoleNULL;
  })();
  var showReturnCode = {
      show: function (v) {
          return Data_Show.show(Data_Show.showInt)(v);
      }
  };
  exports["RoleHarvester"] = RoleHarvester;
  exports["RoleNULL"] = RoleNULL;
  exports["showReturnCode"] = showReturnCode;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Creep"] = $PS["Creep"] || {};
  var exports = $PS["Creep"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Argonaut_Decode_Class = $PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Argonaut_Encode_Class = $PS["Data.Argonaut.Encode.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Console = $PS["Effect.Console"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Screeps_Const = $PS["Screeps.Const"];
  var Screeps_Game = $PS["Screeps.Game"];
  var Screeps_Memory = $PS["Screeps.Memory"];
  var Screeps_Types = $PS["Screeps.Types"];                
  var spawnCreep = function (spawn) {
      return function (parts) {
          return function (name) {
              return function (v) {
                  if (v instanceof Screeps_Types.RoleHarvester) {
                      return function __do() {
                          var res = Screeps_Game.rawSpawnCreep(spawn)(parts)(name)("harv")();
                          if (res instanceof Data_Either.Left) {
                              return Effect_Console.log(Data_Show.show(Screeps_Types.showReturnCode)(res.value0))();
                          };
                          if (res instanceof Data_Either.Right) {
                              return Effect_Console.log(res.value0 + " created succesfully")();
                          };
                          throw new Error("Failed pattern match at Creep (line 75, column 5 - line 77, column 57): " + [ res.constructor.name ]);
                      };
                  };
                  if (v instanceof Screeps_Types.RoleNULL) {
                      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                  };
                  throw new Error("Failed pattern match at Creep (line 72, column 1 - line 72, column 75): " + [ spawn.constructor.name, parts.constructor.name, name.constructor.name, v.constructor.name ]);
              };
          };
      };
  };
  var createCreep = function (spawn) {
      return function (name) {
          return spawnCreep(spawn)([ Screeps_Const.pWork, Screeps_Const.pCarry, Screeps_Const.pMove ])(name)(Screeps_Types.RoleHarvester.value);
      };
  };
  var calcUtility = function ($copy_util) {
      return function ($copy_n) {
          return function ($copy_v) {
              return function ($copy_v1) {
                  var $tco_var_util = $copy_util;
                  var $tco_var_n = $copy_n;
                  var $tco_var_v = $copy_v;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(util, n, v, v1) {
                      if (v.length === 0) {
                          $tco_done = true;
                          return Control_Applicative.pure(Effect.applicativeEffect)(n);
                      };
                      if (v1.length === 0) {
                          $tco_done = true;
                          return Control_Applicative.pure(Effect.applicativeEffect)(n);
                      };
                      var n$prime = (function () {
                          var v2 = Data_Array.uncons(v1);
                          if (v2 instanceof Data_Maybe.Just) {
                              return v2.value0.head;
                          };
                          if (v2 instanceof Data_Maybe.Nothing) {
                              return 0;
                          };
                          throw new Error("Failed pattern match at Creep (line 62, column 21 - line 64, column 28): " + [ v2.constructor.name ]);
                      })();
                      var creepmem$prime = (function () {
                          var v2 = Data_Array.uncons(v1);
                          if (v2 instanceof Data_Maybe.Just) {
                              return v2.value0.tail;
                          };
                          if (v2 instanceof Data_Maybe.Nothing) {
                              return [  ];
                          };
                          throw new Error("Failed pattern match at Creep (line 59, column 21 - line 61, column 29): " + [ v2.constructor.name ]);
                      })();
                      $tco_var_util = util;
                      $tco_var_n = n + n$prime | 0;
                      $tco_var_v = v;
                      $copy_v1 = creepmem$prime;
                      return;
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_util, $tco_var_n, $tco_var_v, $copy_v1);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var processCreeps = function (hash) {
      return function (game) {
          return function (mem) {
              var makeArray = function (v) {
                  return function (v1) {
                      return v1;
                  };
              };
              var array = Foreign_Object.toArrayWithKey(makeArray)(hash);
              var $25 = Foreign_Object.isEmpty(hash);
              if ($25) {
                  return function __do() {
                      Effect_Console.log("creating initial creep")();
                      var spawnslist = Screeps_Game.spawns(game);
                      var spawn1 = Foreign_Object.lookup("Spawn1")(spawnslist);
                      if (spawn1 instanceof Data_Maybe.Nothing) {
                          return Effect_Console.log("fatal error")();
                      };
                      if (spawn1 instanceof Data_Maybe.Just) {
                          return createCreep(spawn1.value0)("Creep1")();
                      };
                      throw new Error("Failed pattern match at Creep (line 33, column 5 - line 35, column 41): " + [ spawn1.constructor.name ]);
                  };
              };
              return function __do() {
                  var init = Screeps_Memory.get(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonInt))(mem)("utility")();
                  var init$prime = (function () {
                      if (init instanceof Data_Either.Left) {
                          Effect_Console.log(Data_Argonaut_Decode_Error.printJsonDecodeError(init.value0))();
                          return -1 | 0;
                      };
                      if (init instanceof Data_Either.Right) {
                          if (init.value0 instanceof Data_Maybe.Nothing) {
                              return 0;
                          };
                          if (init.value0 instanceof Data_Maybe.Just) {
                              return init.value0.value0;
                          };
                          throw new Error("Failed pattern match at Creep (line 42, column 31 - line 44, column 39): " + [ init.value0.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Creep (line 38, column 14 - line 44, column 39): " + [ init.constructor.name ]);
                  })();
                  var creeputl = Screeps_Memory.getCreepsUtl();
                  var $$new = calcUtility(init$prime)(0)(array)(creeputl)();
                  Screeps_Memory.set(Data_Argonaut_Encode_Class.encodeJsonInt)(mem)("utility")($$new)();
                  return Effect_Console.log("U(n-1): " + (Data_Show.show(Data_Show.showInt)(init$prime) + (", U(n): " + Data_Show.show(Data_Show.showInt)($$new))))();
              };
          };
      };
  };
  exports["processCreeps"] = processCreeps;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Creep = $PS["Creep"];
  var Data_Argonaut_Encode_Class = $PS["Data.Argonaut.Encode.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Console = $PS["Effect.Console"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Screeps_Game = $PS["Screeps.Game"];
  var Screeps_Memory = $PS["Screeps.Memory"];                
  var main = function __do() {
      var game = Screeps_Game.getGameGlobal();
      var memory = Screeps_Memory.getMemoryGlobal();
      Screeps_Memory.set(Data_Argonaut_Encode_Class.encodeJsonInt)(memory)("utility")(0)();
      var spawn = Foreign_Object.lookup("Spawn1")(Screeps_Game.spawns(game));
      var creeps = Screeps_Game.creeps(game);
      Creep.processCreeps(creeps)(game)(memory)();
      var tower = Screeps_Game.getObjectById(game)("TOWER_ID");
      if (tower instanceof Data_Maybe.Just) {
          return Effect_Console.log("tower code here")();
      };
      if (tower instanceof Data_Maybe.Nothing) {
          return Effect_Console.log("no tower code needed")();
      };
      throw new Error("Failed pattern match at Main (line 26, column 3 - line 28, column 42): " + [ tower.constructor.name ]);
  };
  exports["main"] = main;
})(PS);
PS["Main"].main();